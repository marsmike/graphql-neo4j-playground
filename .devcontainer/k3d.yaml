apiVersion: k3d.io/v1alpha2
kind: Simple
servers: 1
network: k3d
kubeAPI:
  hostIP: "172.18.0.1"
  hostPort: "6443"
registries:
  create:
    name: ${DOCKER_REGISTRY_URL}
  config: |
    mirrors:
      "${DOCKER_REGISTRY_URL}":
        endpoint:
          - https://${DOCKER_REGISTRY_URL}/docker-virtual
    configs:
      "${DOCKER_REGISTRY_URL}":
        auth:
          username: "${DOCKER_USERNAME}"
          password: "${DOCKER_PASSWORD}"
volumes:
  - volume: /prometheus:/prometheus
    nodeFilters:
      - server[0]
  - volume: /grafana:/grafana
    nodeFilters:
      - server[0]
ports:
  - port: 30000:30000
    nodeFilters:
      - server[0]
  - port: 30080:30080
    nodeFilters:
      - server[0]
  - port: 31080:31080
    nodeFilters:
      - server[0]
  - port: 32000:32000
    nodeFilters:
      - server[0]
env:
  - envVar: http_proxy=${http_proxy}
    nodeFilters:
      - server:*
  - envVar: HTTP_PROXY=${HTTP_PROXY}
    nodeFilters:
      - server:*
  - envVar: https_proxy=${https_proxy}
    nodeFilters:
      - server:*
  - envVar: HTTPS_PROXY=${HTTPS_PROXY}
    nodeFilters:
      - server:*
  - envVar: no_proxy=${no_proxy}
    nodeFilters:
      - server:*
  - envVar: NO_PROXY=${NO_PROXY}
    nodeFilters:
      - server:*
options:
  k3d:
    wait: true
    timeout: "60s"
  k3s:
    extraServerArgs:
      - --tls-san=127.0.0.1
      - --tls-san=172.18.0.1
      #- --tls-san=host.k3d.internal
      #- --tls-san=0.0.0.0
    extraAgentArgs: []
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
